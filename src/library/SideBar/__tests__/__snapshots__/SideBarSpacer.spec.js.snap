// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SideBarSpacer demo examples Snapshots: advanced 1`] = `
.emotion-51 {
  margin: -1em;
  min-height: 200px;
  position: relative;
}

.emotion-49 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: -1em;
  min-height: 200px;
  position: relative;
}

.emotion-48 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: -1em;
  min-height: 200px;
  position: relative;
}

.emotion-48 *,
.emotion-48 *::before,
.emotion-48 *::after {
  box-sizing: inherit;
}

.emotion-35 {
  bottom: 0;
  left: 0;
  margin: 0;
  position: absolute;
  pointer-events: none;
  right: 0;
  top: 0;
  z-index: 1600;
}

.emotion-35 > div {
  pointer-events: auto;
}

.emotion-33 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  bottom: 0;
  left: 0;
  margin: 0;
  position: absolute;
  pointer-events: none;
  right: 0;
  top: 0;
  z-index: 1600;
}

.emotion-33 > div {
  pointer-events: auto;
}

.emotion-32 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-right: 1em;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  bottom: 0;
  left: 0;
  margin: 0;
  position: absolute;
  pointer-events: none;
  right: 0;
  top: 0;
  z-index: 1600;
}

.emotion-32 *,
.emotion-32 *::before,
.emotion-32 *::after {
  box-sizing: inherit;
}

.emotion-32 > div {
  pointer-events: auto;
}

.emotion-3 {
  pointer-events: none !important;
}

.emotion-1 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  pointer-events: none !important;
}

.emotion-0 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  pointer-events: none !important;
}

.emotion-0 *,
.emotion-0 *::before,
.emotion-0 *::after {
  box-sizing: inherit;
}

.emotion-14 {
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow: hidden;
  position: relative;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  width: 250px;
  will-change: width;
  z-index: 800;
}

.emotion-14 > div {
  left: 50%;
  position: absolute;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.emotion-14:last-of-type > div {
  left: 0;
  right: auto;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-14:first-of-type > div {
  left: auto;
  right: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-12 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow: hidden;
  position: relative;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  width: 250px;
  will-change: width;
  z-index: 800;
}

.emotion-12 > div {
  left: 50%;
  position: absolute;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.emotion-12:last-of-type > div {
  left: 0;
  right: auto;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-12:first-of-type > div {
  left: auto;
  right: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-11 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow: hidden;
  position: relative;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  width: 250px;
  will-change: width;
  z-index: 800;
}

.emotion-11 *,
.emotion-11 *::before,
.emotion-11 *::after {
  box-sizing: inherit;
}

.emotion-11 > div {
  left: 50%;
  position: absolute;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.emotion-11:last-of-type > div {
  left: 0;
  right: auto;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-11:first-of-type > div {
  left: auto;
  right: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-9 {
  height: 100%;
  width: 250px;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  will-change: width;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  height: 100%;
  width: 250px;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  will-change: width;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-6 {
  background-color: #ffffff;
  height: 100%;
  width: 250px;
}

.emotion-5 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  padding-bottom: 1em;
  padding-left: 1em;
  padding-right: 1em;
  padding-top: 1em;
  background-color: #ffffff;
  height: 100%;
  width: 250px;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-46 {
  -webkit-flex-basis: 700px;
  -ms-flex-preferred-size: 700px;
  flex-basis: 700px;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-45 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding-bottom: 1em;
  padding-left: 1em;
  padding-right: 1em;
  padding-top: 1em;
  -webkit-flex-basis: 700px;
  -ms-flex-preferred-size: 700px;
  flex-basis: 700px;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-45 *,
.emotion-45 *::before,
.emotion-45 *::after {
  box-sizing: inherit;
}

.emotion-39 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 14px;
  line-height: 1.5;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin-bottom: 1em;
  margin-top: 0;
}

.emotion-39 *,
.emotion-39 *::before,
.emotion-39 *::after {
  box-sizing: inherit;
}

.emotion-17 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 4;
  -webkit-flex-grow: 4;
  -ms-flex-positive: 4;
  flex-grow: 4;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  pointer-events: none !important;
}

.emotion-16 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 4;
  -webkit-flex-grow: 4;
  -ms-flex-positive: 4;
  flex-grow: 4;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  pointer-events: none !important;
}

.emotion-16 *,
.emotion-16 *::before,
.emotion-16 *::after {
  box-sizing: inherit;
}

<Styled(Flex)
  alignItems="stretch"
  direction="row"
  gutterWidth="md"
  justifyContent="start"
>
  <Flex
    alignItems="stretch"
    className="emotion-51"
    direction="row"
    gutterWidth="md"
    justifyContent="start"
  >
    <WithTheme(Component)
      alignItems="stretch"
      className="emotion-51"
      direction="row"
      gutterWidth="md"
      justifyContent="start"
    >
      <Component
        alignItems="stretch"
        className="emotion-51"
        direction="row"
        gutterWidth="md"
        justifyContent="start"
      >
        <Flex
          alignItems="stretch"
          className="emotion-51"
          direction="row"
          element="div"
          gutterWidth="md"
          justifyContent="start"
        >
          <Box
            alignItems="stretch"
            className="emotion-49"
            direction="row"
            element="div"
            gutterWidth="md"
            justifyContent="start"
          >
            <Styled(div)
              alignItems="stretch"
              className="emotion-49"
              direction="row"
              element="div"
              gutterWidth="md"
              justifyContent="start"
            >
              <div
                className="emotion-48"
              >
                <SideBar
                  inline={false}
                  key=".0"
                  marginEnd="1em"
                  usePortal={false}
                >
                  <withProps(SideBar)
                    inline={false}
                    marginEnd="1em"
                    usePortal={false}
                  >
                    <SideBar
                      alignItems="stretch"
                      direction="row"
                      gutterWidth={0}
                      inline={false}
                      justifyContent="start"
                      marginEnd="1em"
                      usePortal={false}
                    >
                      <Flex
                        alignItems="stretch"
                        className="emotion-35"
                        direction="row"
                        gutterWidth={0}
                        justifyContent="start"
                        marginEnd="1em"
                      >
                        <WithTheme(Component)
                          alignItems="stretch"
                          className="emotion-35"
                          direction="row"
                          gutterWidth={0}
                          justifyContent="start"
                          marginEnd="1em"
                        >
                          <Component
                            alignItems="stretch"
                            className="emotion-35"
                            direction="row"
                            gutterWidth={0}
                            justifyContent="start"
                            marginEnd="1em"
                          >
                            <Flex
                              alignItems="stretch"
                              className="emotion-35"
                              direction="row"
                              element="div"
                              gutterWidth={0}
                              justifyContent="start"
                              marginEnd="1em"
                            >
                              <Box
                                alignItems="stretch"
                                className="emotion-33"
                                direction="row"
                                element="div"
                                gutterWidth={0}
                                justifyContent="start"
                                marginEnd="1em"
                              >
                                <Styled(div)
                                  alignItems="stretch"
                                  className="emotion-33"
                                  direction="row"
                                  element="div"
                                  gutterWidth={0}
                                  justifyContent="start"
                                  marginEnd="1em"
                                >
                                  <div
                                    className="emotion-32"
                                  >
                                    <withProps(SideBarSpacer)
                                      key=".0"
                                    >
                                      <SideBarSpacer
                                        grow={1}
                                        shrink={1}
                                      >
                                        <FlexItem
                                          className="emotion-3"
                                          grow={1}
                                          shrink={1}
                                        >
                                          <FlexItem
                                            className="emotion-3"
                                            element="div"
                                            grow={1}
                                            shrink={1}
                                          >
                                            <Box
                                              className="emotion-1"
                                              element="div"
                                              grow={1}
                                              shrink={1}
                                            >
                                              <Styled(div)
                                                className="emotion-1"
                                                element="div"
                                                grow={1}
                                                shrink={1}
                                              >
                                                <div
                                                  className="emotion-0"
                                                />
                                              </Styled(div)>
                                            </Box>
                                          </FlexItem>
                                        </FlexItem>
                                      </SideBarSpacer>
                                    </withProps(SideBarSpacer)>
                                    <SideBarPanel
                                      hasShadows={true}
                                      isCollapsed={false}
                                      isOpen={true}
                                      key=".1"
                                      padding="md"
                                    >
                                      <WithTheme(Component)
                                        hasShadows={true}
                                        isCollapsed={false}
                                        isOpen={true}
                                      >
                                        <Component
                                          hasShadows={true}
                                          isCollapsed={false}
                                          isOpen={true}
                                        >
                                          <Transition
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={
                                              Object {
                                                "enter": 0,
                                                "exit": 400,
                                              }
                                            }
                                            unmountOnExit={false}
                                          >
                                            <SideBarPanelSlider
                                              grow={0}
                                              hasShadows={true}
                                              isCollapsed={false}
                                              shrink={1}
                                              state="entered"
                                            >
                                              <FlexItem
                                                className="emotion-14"
                                                grow={0}
                                                shrink={1}
                                              >
                                                <FlexItem
                                                  className="emotion-14"
                                                  element="div"
                                                  grow={0}
                                                  shrink={1}
                                                >
                                                  <Box
                                                    className="emotion-12"
                                                    element="div"
                                                    grow={0}
                                                    shrink={1}
                                                  >
                                                    <Styled(div)
                                                      className="emotion-12"
                                                      element="div"
                                                      grow={0}
                                                      shrink={1}
                                                    >
                                                      <div
                                                        className="emotion-11"
                                                      >
                                                        <WithTheme(Component)
                                                          isCollapsed={false}
                                                        >
                                                          <Component
                                                            isCollapsed={false}
                                                          >
                                                            <Transition
                                                              appear={false}
                                                              enter={true}
                                                              exit={true}
                                                              in={false}
                                                              mountOnEnter={false}
                                                              onEnter={[Function]}
                                                              onEntered={[Function]}
                                                              onEntering={[Function]}
                                                              onExit={[Function]}
                                                              onExited={[Function]}
                                                              onExiting={[Function]}
                                                              timeout={
                                                                Object {
                                                                  "enter": 0,
                                                                  "exit": 400,
                                                                }
                                                              }
                                                              unmountOnExit={false}
                                                            >
                                                              <SideBarPanelCollapse
                                                                element="div"
                                                                state="exited"
                                                              >
                                                                <Box
                                                                  className="emotion-9"
                                                                  element="div"
                                                                  state="exited"
                                                                >
                                                                  <Styled(div)
                                                                    className="emotion-9"
                                                                    element="div"
                                                                    state="exited"
                                                                  >
                                                                    <div
                                                                      className="emotion-8"
                                                                    >
                                                                      <SideBarPanel
                                                                        element="div"
                                                                        padding="md"
                                                                      >
                                                                        <Box
                                                                          className="emotion-6"
                                                                          element="div"
                                                                          padding="md"
                                                                        >
                                                                          <Styled(div)
                                                                            className="emotion-6"
                                                                            element="div"
                                                                            padding="md"
                                                                          >
                                                                            <div
                                                                              className="emotion-5"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                            </div>
                                                                          </Styled(div)>
                                                                        </Box>
                                                                      </SideBarPanel>
                                                                    </div>
                                                                  </Styled(div)>
                                                                </Box>
                                                              </SideBarPanelCollapse>
                                                            </Transition>
                                                          </Component>
                                                        </WithTheme(Component)>
                                                      </div>
                                                    </Styled(div)>
                                                  </Box>
                                                </FlexItem>
                                              </FlexItem>
                                            </SideBarPanelSlider>
                                          </Transition>
                                        </Component>
                                      </WithTheme(Component)>
                                    </SideBarPanel>
                                    <withProps(SideBarSpacer)
                                      grow={4}
                                      key=".2"
                                    >
                                      <SideBarSpacer
                                        grow={4}
                                        shrink={1}
                                      >
                                        <FlexItem
                                          className="emotion-3"
                                          grow={4}
                                          shrink={1}
                                        >
                                          <FlexItem
                                            className="emotion-3"
                                            element="div"
                                            grow={4}
                                            shrink={1}
                                          >
                                            <Box
                                              className="emotion-17"
                                              element="div"
                                              grow={4}
                                              shrink={1}
                                            >
                                              <Styled(div)
                                                className="emotion-17"
                                                element="div"
                                                grow={4}
                                                shrink={1}
                                              >
                                                <div
                                                  className="emotion-16"
                                                />
                                              </Styled(div)>
                                            </Box>
                                          </FlexItem>
                                        </FlexItem>
                                      </SideBarSpacer>
                                    </withProps(SideBarSpacer)>
                                    <SideBarPanel
                                      hasShadows={true}
                                      isCollapsed={false}
                                      isOpen={true}
                                      key=".3"
                                      padding="md"
                                    >
                                      <WithTheme(Component)
                                        hasShadows={true}
                                        isCollapsed={false}
                                        isOpen={true}
                                      >
                                        <Component
                                          hasShadows={true}
                                          isCollapsed={false}
                                          isOpen={true}
                                        >
                                          <Transition
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={
                                              Object {
                                                "enter": 0,
                                                "exit": 400,
                                              }
                                            }
                                            unmountOnExit={false}
                                          >
                                            <SideBarPanelSlider
                                              grow={0}
                                              hasShadows={true}
                                              isCollapsed={false}
                                              shrink={1}
                                              state="entered"
                                            >
                                              <FlexItem
                                                className="emotion-14"
                                                grow={0}
                                                shrink={1}
                                              >
                                                <FlexItem
                                                  className="emotion-14"
                                                  element="div"
                                                  grow={0}
                                                  shrink={1}
                                                >
                                                  <Box
                                                    className="emotion-12"
                                                    element="div"
                                                    grow={0}
                                                    shrink={1}
                                                  >
                                                    <Styled(div)
                                                      className="emotion-12"
                                                      element="div"
                                                      grow={0}
                                                      shrink={1}
                                                    >
                                                      <div
                                                        className="emotion-11"
                                                      >
                                                        <WithTheme(Component)
                                                          isCollapsed={false}
                                                        >
                                                          <Component
                                                            isCollapsed={false}
                                                          >
                                                            <Transition
                                                              appear={false}
                                                              enter={true}
                                                              exit={true}
                                                              in={false}
                                                              mountOnEnter={false}
                                                              onEnter={[Function]}
                                                              onEntered={[Function]}
                                                              onEntering={[Function]}
                                                              onExit={[Function]}
                                                              onExited={[Function]}
                                                              onExiting={[Function]}
                                                              timeout={
                                                                Object {
                                                                  "enter": 0,
                                                                  "exit": 400,
                                                                }
                                                              }
                                                              unmountOnExit={false}
                                                            >
                                                              <SideBarPanelCollapse
                                                                element="div"
                                                                state="exited"
                                                              >
                                                                <Box
                                                                  className="emotion-9"
                                                                  element="div"
                                                                  state="exited"
                                                                >
                                                                  <Styled(div)
                                                                    className="emotion-9"
                                                                    element="div"
                                                                    state="exited"
                                                                  >
                                                                    <div
                                                                      className="emotion-8"
                                                                    >
                                                                      <SideBarPanel
                                                                        element="div"
                                                                        padding="md"
                                                                      >
                                                                        <Box
                                                                          className="emotion-6"
                                                                          element="div"
                                                                          padding="md"
                                                                        >
                                                                          <Styled(div)
                                                                            className="emotion-6"
                                                                            element="div"
                                                                            padding="md"
                                                                          >
                                                                            <div
                                                                              className="emotion-5"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                            </div>
                                                                          </Styled(div)>
                                                                        </Box>
                                                                      </SideBarPanel>
                                                                    </div>
                                                                  </Styled(div)>
                                                                </Box>
                                                              </SideBarPanelCollapse>
                                                            </Transition>
                                                          </Component>
                                                        </WithTheme(Component)>
                                                      </div>
                                                    </Styled(div)>
                                                  </Box>
                                                </FlexItem>
                                              </FlexItem>
                                            </SideBarPanelSlider>
                                          </Transition>
                                        </Component>
                                      </WithTheme(Component)>
                                    </SideBarPanel>
                                  </div>
                                </Styled(div)>
                              </Box>
                            </Flex>
                          </Component>
                        </WithTheme(Component)>
                      </Flex>
                    </SideBar>
                  </withProps(SideBar)>
                </SideBar>
                <_default
                  key=".1"
                >
                  <FlexItem
                    grow={0}
                    marginHorizontal="auto"
                    padding="md"
                    shrink={1}
                    width={700}
                  >
                    <FlexItem
                      element="div"
                      grow={0}
                      marginHorizontal="auto"
                      padding="md"
                      shrink={1}
                      width={700}
                    >
                      <Box
                        className="emotion-46"
                        element="div"
                        grow={0}
                        marginHorizontal="auto"
                        padding="md"
                        shrink={1}
                      >
                        <Styled(div)
                          className="emotion-46"
                          element="div"
                          grow={0}
                          marginHorizontal="auto"
                          padding="md"
                          shrink={1}
                        >
                          <div
                            className="emotion-45"
                          >
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-39"
                                  >
                                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-39"
                                  >
                                    Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-39"
                                  >
                                    Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-39"
                                  >
                                    Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-39"
                                  >
                                    Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-39"
                                  >
                                    At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                          </div>
                        </Styled(div)>
                      </Box>
                    </FlexItem>
                  </FlexItem>
                </_default>
              </div>
            </Styled(div)>
          </Box>
        </Flex>
      </Component>
    </WithTheme(Component)>
  </Flex>
</Styled(Flex)>
`;

exports[`SideBarSpacer demo examples Snapshots: basic 1`] = `
.emotion-35 {
  margin: -1em;
  min-height: 200px;
  position: relative;
}

.emotion-33 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: -1em;
  min-height: 200px;
  position: relative;
}

.emotion-32 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: -1em;
  min-height: 200px;
  position: relative;
}

.emotion-32 *,
.emotion-32 *::before,
.emotion-32 *::after {
  box-sizing: inherit;
}

.emotion-19 {
  bottom: 0;
  left: 0;
  margin: 0;
  position: absolute;
  pointer-events: none;
  right: 0;
  top: 0;
  z-index: 1600;
}

.emotion-19 > div {
  pointer-events: auto;
}

.emotion-17 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  bottom: 0;
  left: 0;
  margin: 0;
  position: absolute;
  pointer-events: none;
  right: 0;
  top: 0;
  z-index: 1600;
}

.emotion-17 > div {
  pointer-events: auto;
}

.emotion-16 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-right: 1em;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  bottom: 0;
  left: 0;
  margin: 0;
  position: absolute;
  pointer-events: none;
  right: 0;
  top: 0;
  z-index: 1600;
}

.emotion-16 *,
.emotion-16 *::before,
.emotion-16 *::after {
  box-sizing: inherit;
}

.emotion-16 > div {
  pointer-events: auto;
}

.emotion-3 {
  pointer-events: none !important;
}

.emotion-1 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  pointer-events: none !important;
}

.emotion-0 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  pointer-events: none !important;
}

.emotion-0 *,
.emotion-0 *::before,
.emotion-0 *::after {
  box-sizing: inherit;
}

.emotion-14 {
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow: hidden;
  position: relative;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  width: 250px;
  will-change: width;
  z-index: 800;
}

.emotion-14 > div {
  left: 50%;
  position: absolute;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.emotion-14:last-of-type > div {
  left: 0;
  right: auto;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-14:first-of-type > div {
  left: auto;
  right: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-12 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow: hidden;
  position: relative;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  width: 250px;
  will-change: width;
  z-index: 800;
}

.emotion-12 > div {
  left: 50%;
  position: absolute;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.emotion-12:last-of-type > div {
  left: 0;
  right: auto;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-12:first-of-type > div {
  left: auto;
  right: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-11 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow: hidden;
  position: relative;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  width: 250px;
  will-change: width;
  z-index: 800;
}

.emotion-11 *,
.emotion-11 *::before,
.emotion-11 *::after {
  box-sizing: inherit;
}

.emotion-11 > div {
  left: 50%;
  position: absolute;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.emotion-11:last-of-type > div {
  left: 0;
  right: auto;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-11:first-of-type > div {
  left: auto;
  right: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.emotion-9 {
  height: 100%;
  width: 250px;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  will-change: width;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  height: 100%;
  width: 250px;
  -webkit-transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  transition: width 400ms cubic-bezier(0.165,0.84,0.44,1);
  will-change: width;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-6 {
  background-color: #ffffff;
  height: 100%;
  width: 250px;
}

.emotion-5 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  padding-bottom: 1em;
  padding-left: 1em;
  padding-right: 1em;
  padding-top: 1em;
  background-color: #ffffff;
  height: 100%;
  width: 250px;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-30 {
  -webkit-flex-basis: 700px;
  -ms-flex-preferred-size: 700px;
  flex-basis: 700px;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-29 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding-bottom: 1em;
  padding-left: 1em;
  padding-right: 1em;
  padding-top: 1em;
  -webkit-flex-basis: 700px;
  -ms-flex-preferred-size: 700px;
  flex-basis: 700px;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-23 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 14px;
  line-height: 1.5;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin-bottom: 1em;
  margin-top: 0;
}

.emotion-23 *,
.emotion-23 *::before,
.emotion-23 *::after {
  box-sizing: inherit;
}

<Styled(Flex)
  alignItems="stretch"
  direction="row"
  gutterWidth="md"
  justifyContent="start"
>
  <Flex
    alignItems="stretch"
    className="emotion-35"
    direction="row"
    gutterWidth="md"
    justifyContent="start"
  >
    <WithTheme(Component)
      alignItems="stretch"
      className="emotion-35"
      direction="row"
      gutterWidth="md"
      justifyContent="start"
    >
      <Component
        alignItems="stretch"
        className="emotion-35"
        direction="row"
        gutterWidth="md"
        justifyContent="start"
      >
        <Flex
          alignItems="stretch"
          className="emotion-35"
          direction="row"
          element="div"
          gutterWidth="md"
          justifyContent="start"
        >
          <Box
            alignItems="stretch"
            className="emotion-33"
            direction="row"
            element="div"
            gutterWidth="md"
            justifyContent="start"
          >
            <Styled(div)
              alignItems="stretch"
              className="emotion-33"
              direction="row"
              element="div"
              gutterWidth="md"
              justifyContent="start"
            >
              <div
                className="emotion-32"
              >
                <SideBar
                  inline={false}
                  key=".0"
                  marginEnd="1em"
                  usePortal={false}
                >
                  <withProps(SideBar)
                    inline={false}
                    marginEnd="1em"
                    usePortal={false}
                  >
                    <SideBar
                      alignItems="stretch"
                      direction="row"
                      gutterWidth={0}
                      inline={false}
                      justifyContent="start"
                      marginEnd="1em"
                      usePortal={false}
                    >
                      <Flex
                        alignItems="stretch"
                        className="emotion-19"
                        direction="row"
                        gutterWidth={0}
                        justifyContent="start"
                        marginEnd="1em"
                      >
                        <WithTheme(Component)
                          alignItems="stretch"
                          className="emotion-19"
                          direction="row"
                          gutterWidth={0}
                          justifyContent="start"
                          marginEnd="1em"
                        >
                          <Component
                            alignItems="stretch"
                            className="emotion-19"
                            direction="row"
                            gutterWidth={0}
                            justifyContent="start"
                            marginEnd="1em"
                          >
                            <Flex
                              alignItems="stretch"
                              className="emotion-19"
                              direction="row"
                              element="div"
                              gutterWidth={0}
                              justifyContent="start"
                              marginEnd="1em"
                            >
                              <Box
                                alignItems="stretch"
                                className="emotion-17"
                                direction="row"
                                element="div"
                                gutterWidth={0}
                                justifyContent="start"
                                marginEnd="1em"
                              >
                                <Styled(div)
                                  alignItems="stretch"
                                  className="emotion-17"
                                  direction="row"
                                  element="div"
                                  gutterWidth={0}
                                  justifyContent="start"
                                  marginEnd="1em"
                                >
                                  <div
                                    className="emotion-16"
                                  >
                                    <withProps(SideBarSpacer)
                                      key=".0"
                                    >
                                      <SideBarSpacer
                                        grow={1}
                                        shrink={1}
                                      >
                                        <FlexItem
                                          className="emotion-3"
                                          grow={1}
                                          shrink={1}
                                        >
                                          <FlexItem
                                            className="emotion-3"
                                            element="div"
                                            grow={1}
                                            shrink={1}
                                          >
                                            <Box
                                              className="emotion-1"
                                              element="div"
                                              grow={1}
                                              shrink={1}
                                            >
                                              <Styled(div)
                                                className="emotion-1"
                                                element="div"
                                                grow={1}
                                                shrink={1}
                                              >
                                                <div
                                                  className="emotion-0"
                                                />
                                              </Styled(div)>
                                            </Box>
                                          </FlexItem>
                                        </FlexItem>
                                      </SideBarSpacer>
                                    </withProps(SideBarSpacer)>
                                    <SideBarPanel
                                      hasShadows={true}
                                      isCollapsed={false}
                                      isOpen={true}
                                      key=".1"
                                      padding="md"
                                    >
                                      <WithTheme(Component)
                                        hasShadows={true}
                                        isCollapsed={false}
                                        isOpen={true}
                                      >
                                        <Component
                                          hasShadows={true}
                                          isCollapsed={false}
                                          isOpen={true}
                                        >
                                          <Transition
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={
                                              Object {
                                                "enter": 0,
                                                "exit": 400,
                                              }
                                            }
                                            unmountOnExit={false}
                                          >
                                            <SideBarPanelSlider
                                              grow={0}
                                              hasShadows={true}
                                              isCollapsed={false}
                                              shrink={1}
                                              state="entered"
                                            >
                                              <FlexItem
                                                className="emotion-14"
                                                grow={0}
                                                shrink={1}
                                              >
                                                <FlexItem
                                                  className="emotion-14"
                                                  element="div"
                                                  grow={0}
                                                  shrink={1}
                                                >
                                                  <Box
                                                    className="emotion-12"
                                                    element="div"
                                                    grow={0}
                                                    shrink={1}
                                                  >
                                                    <Styled(div)
                                                      className="emotion-12"
                                                      element="div"
                                                      grow={0}
                                                      shrink={1}
                                                    >
                                                      <div
                                                        className="emotion-11"
                                                      >
                                                        <WithTheme(Component)
                                                          isCollapsed={false}
                                                        >
                                                          <Component
                                                            isCollapsed={false}
                                                          >
                                                            <Transition
                                                              appear={false}
                                                              enter={true}
                                                              exit={true}
                                                              in={false}
                                                              mountOnEnter={false}
                                                              onEnter={[Function]}
                                                              onEntered={[Function]}
                                                              onEntering={[Function]}
                                                              onExit={[Function]}
                                                              onExited={[Function]}
                                                              onExiting={[Function]}
                                                              timeout={
                                                                Object {
                                                                  "enter": 0,
                                                                  "exit": 400,
                                                                }
                                                              }
                                                              unmountOnExit={false}
                                                            >
                                                              <SideBarPanelCollapse
                                                                element="div"
                                                                state="exited"
                                                              >
                                                                <Box
                                                                  className="emotion-9"
                                                                  element="div"
                                                                  state="exited"
                                                                >
                                                                  <Styled(div)
                                                                    className="emotion-9"
                                                                    element="div"
                                                                    state="exited"
                                                                  >
                                                                    <div
                                                                      className="emotion-8"
                                                                    >
                                                                      <SideBarPanel
                                                                        element="div"
                                                                        padding="md"
                                                                      >
                                                                        <Box
                                                                          className="emotion-6"
                                                                          element="div"
                                                                          padding="md"
                                                                        >
                                                                          <Styled(div)
                                                                            className="emotion-6"
                                                                            element="div"
                                                                            padding="md"
                                                                          >
                                                                            <div
                                                                              className="emotion-5"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                            </div>
                                                                          </Styled(div)>
                                                                        </Box>
                                                                      </SideBarPanel>
                                                                    </div>
                                                                  </Styled(div)>
                                                                </Box>
                                                              </SideBarPanelCollapse>
                                                            </Transition>
                                                          </Component>
                                                        </WithTheme(Component)>
                                                      </div>
                                                    </Styled(div)>
                                                  </Box>
                                                </FlexItem>
                                              </FlexItem>
                                            </SideBarPanelSlider>
                                          </Transition>
                                        </Component>
                                      </WithTheme(Component)>
                                    </SideBarPanel>
                                  </div>
                                </Styled(div)>
                              </Box>
                            </Flex>
                          </Component>
                        </WithTheme(Component)>
                      </Flex>
                    </SideBar>
                  </withProps(SideBar)>
                </SideBar>
                <_default
                  key=".1"
                >
                  <FlexItem
                    grow={0}
                    marginHorizontal="auto"
                    padding="md"
                    shrink={1}
                    width={700}
                  >
                    <FlexItem
                      element="div"
                      grow={0}
                      marginHorizontal="auto"
                      padding="md"
                      shrink={1}
                      width={700}
                    >
                      <Box
                        className="emotion-30"
                        element="div"
                        grow={0}
                        marginHorizontal="auto"
                        padding="md"
                        shrink={1}
                      >
                        <Styled(div)
                          className="emotion-30"
                          element="div"
                          grow={0}
                          marginHorizontal="auto"
                          padding="md"
                          shrink={1}
                        >
                          <div
                            className="emotion-29"
                          >
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-23"
                                  >
                                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-23"
                                  >
                                    Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-23"
                                  >
                                    Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-23"
                                  >
                                    Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-23"
                                  >
                                    Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                            <Text
                              appearance="p"
                              element="p"
                            >
                              <TextProvider
                                appearance="p"
                                element="p"
                              >
                                <Styled(p)
                                  appearance="p"
                                  element="p"
                                >
                                  <p
                                    className="emotion-23"
                                  >
                                    At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur
                                  </p>
                                </Styled(p)>
                              </TextProvider>
                            </Text>
                          </div>
                        </Styled(div)>
                      </Box>
                    </FlexItem>
                  </FlexItem>
                </_default>
              </div>
            </Styled(div)>
          </Box>
        </Flex>
      </Component>
    </WithTheme(Component)>
  </Flex>
</Styled(Flex)>
`;
